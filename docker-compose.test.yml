services:
  librechat_api:
    # image: ghcr.io/gradient-ds/soevai-api:${LIBRECHAT_TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile.soev.ai.multi
      target: api-build
    container_name: librechat_api
    restart: unless-stopped
    labels:
      - "soevai.restart=enabled"
    environment:
      CONFIG_PATH: /soevai/librechat.soev.ai.yaml
      BASE_CONFIG_PATH: /soevai/librechat.soev.ai.yaml
      HOST: 0.0.0.0
      PORT: 3080
      MONGO_URI: mongodb://mongodb:27017/LibreChat
      MEILI_HOST: http://meilisearch:7700
      RAG_API_URL: http://rag_api:8000
      SOEVAI_ROOT: /soevai
    depends_on:
      - mongodb
      - rag_api
    env_file:
      - .env
    volumes:
      - ./librechat.yaml:/soevai/librechat.yaml:ro
      - ./librechat.soev.ai.yaml:/soevai/librechat.soev.ai.yaml:rw
      - ./admin-overrides.yaml:/soevai/admin-overrides.yaml:rw
      - ./uploads:/soevai/uploads
      - ./logs:/soevai/api/logs
    ports:
      - "3080:3080"

  mongodb:
    image: mongo
    container_name: prod-mongodb
    restart: unless-stopped
    volumes:
      - ./data-node:/data/db
    command: mongod --noauth

  meilisearch:
    image: getmeili/meilisearch:v1.12.3
    container_name: prod-meilisearch
    restart: unless-stopped
    environment:
      MEILI_NO_ANALYTICS: "true"
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
    volumes:
      - ./meili_data_v1.12:/meili_data

  vectordb:
    image: ankane/pgvector:latest
    container_name: prod-vectordb
    restart: unless-stopped
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - pgdata2:/var/lib/postgresql/data

  rag_api:
    image: ghcr.io/danny-avila/librechat-rag-api-dev:latest
    container_name: prod-rag-api
    restart: unless-stopped
    depends_on:
      - vectordb
      # - ollama
    environment:
      DB_HOST: vectordb
      RAG_PORT: 8000
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      # OLLAMA_HOST: http://ollama:11434
    env_file:
      - .env

  # # Ollama â€“ text-embedding model server
  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: prod-ollama
  #   restart: unless-stopped
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama:/root/.ollama
  #   environment:
  #     - OLLAMA_DISABLE_TELEMETRY=1

volumes:
  pgdata2:
  # ollama: 